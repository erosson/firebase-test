{
  "rules": {
    // /secure is maintained solely by the task queue and queue-processors
    "secure": {
      ".read": "auth !== null"
    },
    "queue": {
      "$id": {
        // no deletes or updates, only writes
        ".write": "auth !== null && !data.exists() && newData.exists()",
        ".validate": "newData.hasChildren(['user', 'time'])",
        "user": {
          ".validate": "newData.val() === auth.uid"
        },
        "time": {
          // https://stackoverflow.com/questions/25433016/how-do-you-use-security-rules-to-prevent-a-user-from-faking-firebase-servervalue/25433017#25433017
          ".validate": "newData.val() === now"
        }
      }
    },
    "$other": {
      // most of the database is scratch-space anyone can write to
      ".read": "auth !== null",
      ".write": "auth !== null"
    }
  }
}
